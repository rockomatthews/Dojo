/// <reference types="jquery" />
/// <reference types="pickadate" />
/// <reference types="materialize-css" />
import { AfterViewInit, ComponentFactoryResolver, ComponentRef, ElementRef, OnDestroy, Renderer, ViewContainerRef } from '@angular/core';
import { NgControl } from '@angular/forms';
import { Subscription } from 'rxjs/Subscription';
import { ErrorMessageResource, MzErrorMessageComponent } from './error-message';
export declare class MzValidationComponent implements AfterViewInit, OnDestroy {
    ngControl: NgControl;
    private elementRef;
    renderer: Renderer;
    private resolver;
    private viewContainerRef;
    private _disabled;
    private _disablingState;
    private _enablingState;
    private _formControlDisabled;
    private _required;
    errorMessageComponent?: ComponentRef<MzErrorMessageComponent>;
    labelElement: HTMLElement;
    nativeElement: JQuery;
    statusChangesSubscription: Subscription;
    id: string;
    required: any;
    errorMessageResource: ErrorMessageResource;
    formControlDisabled: boolean;
    readonly elementToAddValidation: JQuery;
    readonly inputSelectDropdown: JQuery;
    readonly isNativeSelectElement: boolean;
    onFocusOut(target: Event): void;
    constructor(ngControl: NgControl, elementRef: ElementRef, renderer: Renderer, resolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    clearValidationState(element: JQuery): void;
    createRequiredSpanElement(): void;
    initElements(): void;
    initErrorMessageComponent(): void;
    initNativeSelectElement(): void;
    setValidationState(): void;
    subscribeStatusChanges(): void;
    updateSelect(): void;
}
